#!/usr/bin/env python

import subprocess
import optparse
import socket
import time
import re

def get_proc(scheme, maxproc):
    cmd_ret = subprocess.Popen(['ps', 'caux', '--sort', '-%cpu'],
                               stdout=subprocess.PIPE).communicate()[0]
    processes = cmd_ret.split('\n')
    nfields = len(processes[0].split()) - 1
    now = time.time()
    count = 0
    sensu_proc = re.compile(r'^(check-|metrics-|check_|metrics_).*$')
    for row in processes[1:]:
        if count < int(maxproc):
            ps_row = row.split(None, nfields)
            count = count+1
            if ps_row:
                user = ps_row[0]
                proc_name = ps_row[10]
                value = str(ps_row[2])
                if not sensu_proc.match(proc_name):
                    print "%s.%s.%s %s %d" % (scheme, user, proc_name, value, now)
                else:
                    continue
        else:
            break

def main():
    parser = optparse.OptionParser()

    parser.add_option('-s', '--scheme',
                      default=socket.getfqdn() + ".proc_cpu_usage",
                      dest='graphite_scheme',
                      help='Text to prepend to metric',
                      metavar='SCHEME')

    parser.add_option('-n', '--maxproc', default=15,
                      dest='maxproc', help='Processes displayed')

    (options, args) = parser.parse_args()

    get_proc(options.graphite_scheme, options.maxproc)

if __name__ == '__main__':
    main()
